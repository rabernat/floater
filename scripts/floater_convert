#!/usr/bin/env python -u

import argparse
from floater import utils

parser = argparse.ArgumentParser(
        description='Translate MITgcm mds float output files into other formats.')

parser.add_argument('--float_file_prefix', default='float_trajectories',
                    metavar='PREFIX',
                    help='prefix of MITgcm output files (e.g. float_trajectories.001.001.data)')
parser.add_argument('--float_buf_dim', default=14, metavar='N',
                    help='number of items in each trajectory record')

parser.add_argument('--progress', dest='progress', action='store_true')
parser.set_defaults(progress=False)

parser.add_argument('--input_dir', default='./', metavar='DIR',
                   help='directory in which to find the MITgcm float data')

parser.add_argument('--output_format', choices=['pytables','bcolz','pandas','netcdf'],
                    default='pytables', metavar='FMT',
                    help="output format of conversion "
                         "('pytables', 'bcolz', 'pandas', or 'netcdf')")

parser.add_argument('--keep_fields', type=str,
                    default=None, metavar='FIELDS',
                    help="comma-dilimited list of data fields to retain")

parser.add_argument('--ref_time', default=None,
                    help='reference time')

parser.add_argument('--step_time', default=86400,
                    help='step time')

parser.add_argument('output_file',
                   help='the output filename')

args = parser.parse_args()

if args.keep_fields is not None:
    keep_fields = [str(item) for item in args.keep_fields.split(',')]
else:
    keep_fields = None

if args.output_format=='pytables':
    utils.floats_to_tables(args.input_dir, args.output_file,
                        float_file_prefix=args.float_file_prefix,
                        fltBufDim=args.float_buf_dim,
			            progress=args.progress,
                        keep_fields=keep_fields)
elif args.output_format=='bcolz':
    utils.floats_to_bcolz(args.input_dir, args.output_file,
                        file_prefix=args.float_file_prefix,
                        buf_dim=args.float_buf_dim,
			            progress=args.progress,
                        keep_fields=keep_fields)
elif args.output_format=='pandas':
    utils.floats_to_pandas(args.input_dir, args.output_file,
                        file_prefix=args.float_file_prefix,
                        buf_dim=args.float_buf_dim,
			            progress=args.progress,
                        keep_fields=keep_fields)
elif args.output_format=='netcdf':
    utils.floats_to_netcdf(args.input_dir, args.output_file,
                        float_file_prefix=args.float_file_prefix,
                        ref_time=args.ref_time,
                        step_time=args.step_time)
